apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name  }}-backend
  labels:
    app: {{ .Values.name }}-backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}-backend
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Values.name }}-backend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.name }}-backend
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: ASPNETCORE_URLS
              value: http://*:5000
            - name: ProtoActor__ClusterProvider
              value: Kubernetes
            - name: ProtoActor__Host
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - configMapRef:
                name: {{ .Values.name }}-backend
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/organization
              port: 5000
          readinessProbe:
            httpGet:
              path: /api/organization
              port: 5000
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
